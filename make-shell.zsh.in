#!@ZSH@

set -o nomatch
set -o pipefail

local status() {
  echo -e "$@"
}

local pre_hook() {
  status "CASILEPRE$target"
}

local post_hook() {
  status "CASILEPOST$2$target"
}

local report_stdout() {
  cat - |
    while read line; do
      echo -e "CASILESTDOUT$target$line"
    done
}

local report_stderr() {
  cat - |
    while read line; do
      echo -e "CASILESTDERR$target$line" >&2
    done
}

local process_recipe() {
  pre_hook $target
  {
    (
      local free=$(free --kilo | awk '/^Mem:/ { print $4 }')
      ulimit -Sv $(($free/100*90))
      set -e
      set -o nobadpattern
      [[ ! -v _debug ]] || set -x
      exec > >(report_stdout) 2> >(report_stderr)
      eval "$@"
    )
  } always {
    post_hook $target $?
  }
}

local process_shell() {
  (
    set -e
    set -o nobadpattern
    [[ ! -v _debug ]] || set -x
    eval "$@"
  )
}

if [[ $1 =~ "^target=" ]]; then
  eval $1
  shift
fi

if [[ $1 = "-x" ]]; then
  _debug=true
  shift
fi

if [[ -v target && -v MAKELEVEL ]]; then
  process_recipe $@
else
  process_shell $@
fi
